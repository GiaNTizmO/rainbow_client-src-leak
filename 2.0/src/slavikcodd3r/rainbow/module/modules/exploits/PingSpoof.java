package slavikcodd3r.rainbow.module.modules.exploits;

import net.minecraft.network.play.client.C16PacketClientStatus;
import net.minecraft.network.play.server.S00PacketKeepAlive;
import net.minecraft.network.play.server.S32PacketConfirmTransaction;
import slavikcodd3r.rainbow.event.EventTarget;
import slavikcodd3r.rainbow.event.events.PacketReceiveEvent;
import slavikcodd3r.rainbow.event.events.PacketSendEvent;
import slavikcodd3r.rainbow.event.events.TickEvent;
import slavikcodd3r.rainbow.event.events.UpdateEvent;
import slavikcodd3r.rainbow.module.Module;
import slavikcodd3r.rainbow.option.Option.Op;
import slavikcodd3r.rainbow.utils.ClientUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;

@Module.Mod(displayName = "PingSpoof")
public class PingSpoof extends Module
{
    @Op(name = "Client")
    private boolean client;
    @Op(name = "Server")
    private boolean server;
	Minecraft mc = Minecraft.getMinecraft();
	
	public PingSpoof() {
		this.client = true;
	}
	
    @EventTarget
    public void onUpdate(final UpdateEvent event) {
    	if (!this.client && !this.server) {
    		this.client = true;
    	}
    }
	
    @EventTarget
    public void onPacket(final PacketSendEvent event) {
    	if (this.client) {
    		if (event.getPacket() instanceof C00PacketKeepAlive) {
    			event.setCancelled(true);
    		}
    		if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
    			event.setCancelled(true);
    		}
    	}
    }
	
    @EventTarget
    public void onPacket(final PacketReceiveEvent event) {
    	if (this.server) {
    		if (event.getPacket() instanceof S00PacketKeepAlive) {
    			event.setCancelled(true);
    		}
    		if (event.getPacket() instanceof S32PacketConfirmTransaction) {
    			event.setCancelled(true);
    		}
    	}
    }
}